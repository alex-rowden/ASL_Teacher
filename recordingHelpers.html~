
<html>
  <head>
    <script src="https://js.leapmotion.com/leap-0.6.4.js"></script>
	<script src="./public/assets/js/savefile.js"></script>
  </head>

  <body>
    <h1>Recording Data from the Phalanges</h1>
    <div id="output"></div>
    
    <script src="https://js.leapmotion.com/leap-0.6.4.js"></script>
    
    <script type="text/javascript">
    
	
function stdDeviation()
{
	var mean_val = mean(values);
	var sum = 0;
	var distance = 0;
	for (var i = 0; i < values.length; i++){
	distance = values - mean_val;
	sum += distance * distance;
	}
	return Math.sqrt(sum/values.length);
}

function mean(hands)
{
    var sum = 0;
    for (i = 0; i < values.length; i++){
	sum += values[i];
    }
    return (sum / values.length);
}



	
    var hands = [];
    // Leap.loop uses browser's requestAnimationFrame
    var options = { enableGestures: true };
	   var count = 0;
	   Leap.loop(options, function(frame) {
			if(typeof frame.hands != "undefined" && frame.hands.length == 1)
			{
			var curr_hand = frame.hands[0];
			console.log(count, typeof curr_hand);
			var handStatus = {
				confidence: curr_hand.confidence,
				direction: curr_hand.direction,
				fingers: {
					mcpPosition: curr_hand.fingers.mcpPosition, pipPosition: curr_hand.fingers.pipPosition, dipPosition: curr_hand.dipPosition
				}, 
				palmPosition: curr_hand.palmPosition,
				palmNormal: curr_hand.palmNormal,
				palmVelocity: curr_hand.palmVelocity
			};
			the_hand.push(handStatus);
			if(count++ == 10)
			{
			//	console.log(mean(the_hand.confidence));
				try {
					console.log(JSON.stringify(the_hand));
				} catch(err) {
					console.log(err);
					return;
				}
				startDownload(output, 'test.json');
				return;
			}
				
			}
		});
	
     
    
	
    
    
    </script>
  </body>
</html>




